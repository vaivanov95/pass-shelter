#!/bin/bash
# restore_secrets
set -euo pipefail

cleanup() {
    local dir=$1
    find "$dir" -type f -exec shred -u {} \;
    rm -rf "$dir"
}

show_usage() {
    echo "Usage: BACKUP_PASSWORD=<password> ${0}"
    echo "Restores .gnupg and .password-store from encrypted backup"
    exit 1
}

[ -z "${BACKUP_PASSWORD:-}" ] && show_usage

BACKUP_PATH="/backup/secrets.gpg"
RESTORE_PATH="$HOME"
GPG_DIR="$RESTORE_PATH/.gnupg"
PASS_DIR="$RESTORE_PATH/.password-store"

[ ! -f "$BACKUP_PATH" ] && { echo "Error: $BACKUP_PATH not found"; exit 1; }

TEMP_DIR=$(mktemp -d)
trap "cleanup '$TEMP_DIR'" EXIT

umask 077

echo "$BACKUP_PASSWORD" | gpg --batch --yes --passphrase-fd 0 \
    -o "$TEMP_DIR/secrets.tar.gz" "$BACKUP_PATH"

tar -xzf "$TEMP_DIR/secrets.tar.gz" -C "$TEMP_DIR"

BACKUP_DIR="$TEMP_DIR/secrets-backup"
[ ! -d "$BACKUP_DIR/.gnupg" ] && { echo "Error: .gnupg missing in backup"; exit 1; }
[ ! -d "$BACKUP_DIR/.password-store" ] && { echo "Error: .password-store missing"; exit 1; }

mkdir -p "$GPG_DIR" "$PASS_DIR"
chmod 700 "$GPG_DIR" "$PASS_DIR"

cp -a "$BACKUP_DIR/.gnupg/." "$GPG_DIR/"
cp -a "$BACKUP_DIR/.password-store/." "$PASS_DIR/"

echo "Restore successful. Contents updated."
exit 0